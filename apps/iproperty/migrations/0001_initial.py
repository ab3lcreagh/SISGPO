# Generated by Django 4.1.3 on 2023-05-09 17:13

import apps.iproperty.models
import apps.iproperty.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("base", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="DrawingClassification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="Nombre")),
            ],
        ),
        migrations.CreateModel(
            name="FigurativeElementClassification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "number",
                    models.CharField(
                        default="0.0.0", max_length=10, verbose_name="Código"
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="Nombre")),
            ],
        ),
        migrations.CreateModel(
            name="PatentClassification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="Nombre")),
            ],
        ),
        migrations.CreateModel(
            name="ProductClassification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "number",
                    models.PositiveIntegerField(default=0, verbose_name="Código"),
                ),
                ("name", models.CharField(max_length=150, verbose_name="Nombre")),
            ],
        ),
        migrations.CreateModel(
            name="IndustrialProperty",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "number",
                    models.CharField(
                        max_length=15, unique=True, verbose_name="Registro"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=150, unique=True, verbose_name="Nombre"
                    ),
                ),
                (
                    "created_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de creada"
                    ),
                ),
                (
                    "modality",
                    models.PositiveIntegerField(
                        choices=[
                            (1, "MARCAS"),
                            (2, "NOMBRES COMERCIALES"),
                            (3, "EMBLEMA EMPRESARIAL"),
                            (4, "RÓTULO DE ESTABLECIMIENTO"),
                            (5, "PATENTE"),
                            (6, "MODELO UTILIDAD"),
                            (7, "MODELO INDUSTRIAL"),
                        ],
                        verbose_name="Modalidad",
                    ),
                ),
                (
                    "application_date",
                    models.DateField(verbose_name="Fecha de solicitud"),
                ),
                (
                    "application_number",
                    models.CharField(max_length=10, verbose_name="Número de solicitud"),
                ),
                (
                    "status",
                    models.PositiveIntegerField(
                        choices=[
                            (1, "SOLICITADA"),
                            (2, "CONDEDIDA"),
                            (3, "DENEGADA"),
                            (4, "VENCIDA"),
                        ],
                        default=1,
                        verbose_name="Estado",
                    ),
                ),
                (
                    "certificate_number",
                    models.CharField(
                        max_length=10, verbose_name="Número de certificado"
                    ),
                ),
                (
                    "type_legal_document",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Tipo de documento legal",
                    ),
                ),
                (
                    "grant_date",
                    models.DateField(
                        blank=True,
                        null=True,
                        validators=[apps.iproperty.validators.DateInFutureValidator()],
                        verbose_name="Fecha de otorgamiento",
                    ),
                ),
                (
                    "expiration_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha de vencimiento"
                    ),
                ),
                (
                    "granted_resolution",
                    models.CharField(
                        blank=True,
                        max_length=15,
                        null=True,
                        verbose_name="Concedido por resolución",
                    ),
                ),
                (
                    "observation",
                    models.TextField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Observación",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=apps.iproperty.models.model_upload_image,
                        verbose_name="Subir Archivo",
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="base.country",
                        verbose_name="País",
                    ),
                ),
                (
                    "drawings",
                    models.ManyToManyField(
                        to="iproperty.drawingclassification",
                        verbose_name="Clasificación dibujo y modelos industriales",
                    ),
                ),
                (
                    "figurative_elements",
                    models.ManyToManyField(
                        to="iproperty.figurativeelementclassification",
                        verbose_name="Clasificación internacional de elementos figurativos",
                    ),
                ),
                (
                    "patents",
                    models.ManyToManyField(
                        to="iproperty.patentclassification",
                        verbose_name="Clasificación internacional de patentes",
                    ),
                ),
                (
                    "products",
                    models.ManyToManyField(
                        to="iproperty.productclassification",
                        verbose_name="Clasificación productos y servicios",
                    ),
                ),
            ],
        ),
    ]
